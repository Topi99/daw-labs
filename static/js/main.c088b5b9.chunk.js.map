{"version":3,"sources":["components/Routes/Routes.module.scss","components/Navigation/Navigation.js","components/Footer/Footer.js","components/Home/questions.js","components/Home/QuestionsElements.js","components/Home/Home.js","components/Routes/Routes.js","App.js","serviceWorker.js","index.js","components/Home/Home.module.scss","components/Navigation/Navigation.module.scss"],"names":["module","exports","subTitle","biggerFont","main","Navigation","react_default","a","createElement","className","styles","nav","Link","to","navElement","mainNavE","join","Footer","href","questions","q","QuestionsElements","props","Fragment","map","Home","QuestionsElements_QuestionsElements","Routes","Route","exact","path","component","App","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","document","BrowserRouter","components_Navigation_Navigation","components_Routes_Routes","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c088b5b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitle\":\"Routes_subTitle__1uNYv\",\"biggerFont\":\"Routes_biggerFont__njTuB\",\"main\":\"Routes_main__3-uGk\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Navigation.module.scss';\r\n\r\nconst Navigation = (...props) => {\r\n  return(\r\n    <nav className={styles.nav}>\r\n      <Link to=\"/daw-labs\" className={[styles.navElement, styles.mainNavE].join(' ')}>Home</Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './Footer.module.scss';\r\n\r\nconst Footer = (...props) => {\r\n  return(\r\n    <footer>\r\n      <p>Topiltzin Hernández Mares. A01703266</p>\r\n      <p>Editor de texto usado: <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a></p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","export const questions = [\r\n  {\r\n    q: \"¿Cuál es la diferencia entre Internet y la World Wide Web?\",\r\n    a: \"Internet es una red de redes, en cambio, la WWW es un sistema de transferencia de información basado en internet.\"\r\n  }, \r\n  {\r\n    q: \"¿Cuál es el propósito de los métodos HTTP: GET, HEAD, POST, PUT, PATCH, DELETE?\",\r\n    a: `GET: Mandar una petición a algún servidor. HEAD: Mandar metadatos al momento de hacer una petición, como tokens. POST: Mandar datos a guardar o procesar al servidor. PUT, PATCH: Actualizar datos en el servidor. DELETE: Mandar petición de borrado de algún dato.`\r\n  },\r\n  {\r\n    q: \"¿Qué método HTTP se debe utilizar al enviar un formulario HTML, por ejemplo cuando ingresas tu usuario y contraseña en algún sitio? ¿Por qué?\",\r\n    a: \"Se debe usar POST, ya que así nos aseguramos que la información sensible no sea visible del lado del cliente y no se muestre en la URL.\"\r\n  },\r\n  {\r\n    q: \"¿Es responsabilidad del desarrollador corregir un sitio web si un usuario reporta que intentó acceder al sitio y se encontró con un error 404? ¿Por qué?\",\r\n    a: \"Depende. Si el error lo obtuvo al dar click en algún enlace puesto por el desarrollador, entonces sí. Pero si el error se originó cuando el usuario ingresó directamente la URl en el navegador, entonces no es responsabilidad del desarrollador.\"\r\n  },\r\n  {\r\n    q: \"¿Qué método HTTP se utiliza cuando a través de un navegador web se accede a una página a través de un URL?\",\r\n    a: \"GET.\"\r\n  },\r\n  {\r\n    q: \"Un servidor web devuelve una respuesta HTTP con código 200. ¿Qué significa esto? ¿Ocurrió algún error?\",\r\n    a: \"Significa que todo está bien, no hay que hacer ninguna corrección.\"\r\n  },\r\n  {\r\n    q: \"¿Es responsabilidad del desarrollador corregir un sitio web si un usuario reporta que intentó acceder al sitio y se encontró con un error 500? ¿Por qué?\",\r\n    a: \"El error 500 es tal vez lo peor que puede pasar cuanso se ingresa a un sitio en internet. Es completa responsabilidad del desarrollador que el servidor no retorne 500, ya que significa que ocurrió algún error en el código.\"\r\n  }, \r\n  {\r\n    q: \"¿Qué significa que un atributo HTML5 esté depreciado o desaprobado (deprecated)? Menciona algunos elementos de HTML 4 que en HTML5 estén desaprobados.\",\r\n    a: \"Significa que ya no tiene total soporte por los navegadores, que ya esté en desuso. <i>, <div> (aún en discusión), <b>, etc\"\r\n  },\r\n  {\r\n    q: \"¿Cuáles son las diferencias principales entre HTML 4 y HTML5?\",\r\n    a: \"La principal diferencia es el DOCTYPE, que en HTML5 es muy simplificado. Otra es que ahora algunas etiquetas ya no necesitan su correspondiente etiqueta de cierre, tales como <br>. Ahora las etiquetas meta tienen más capacidades y son más simples.\"\r\n  },\r\n  {\r\n    q: \"¿Qué componentes de estructura y estilo tiene una tabla?\",\r\n    a: \"<thead> <tbody> <tfoot>\"\r\n  },\r\n  {\r\n    q: \"¿Cuáles son los principales controles de una forma HTML5?\",\r\n    a: \"inputs, con los tipos text y submit\"\r\n  },\r\n  {\r\n    q: \"¿Qué tanto soporte HTML5 tiene el navegador que utilizas?\",\r\n    a: \"YOUR BROWSER SCORES 504 OUT OF 555 POINTS. Uso Google Chrome.\"\r\n  }, \r\n  {\r\n    q: \"¿Cuál es el ciclo de vida de los sistemas de información?\",\r\n    a: \"Planificación, análisis, diseño, implementación, pruebas, despliegue, uso y mantenimiento.\"\r\n  }, \r\n  {\r\n    q: \"¿Cuál es el ciclo de desarrollo de sistemas de información?\",\r\n    a: \"Los encargados de desarrollar software pueden instalar software comprobando a terceros o escribir programas diseñados a la medida del solicitante. La elección depende del costo de cada alternativa, del tiempo disponible para escribir el software y de la disponibilidad de los programadores.Por lo general, los programadores que trabajan en las grandes organizaciones pertenecen a un grupo permanente de profesionales.\"\r\n  },\r\n  {\r\n    q: \"URL\",\r\n    a: \"Uniform Resource Locator, es la dirección que se asigna a cada recurso que se encuentra en internet.\"\r\n  },\r\n  {\r\n    q: \"MIME\",\r\n    a: \"Son la manera standard de mandar contenido a través de la red. Especifican el tipo de datos que contiene un archivo. \"\r\n  },\r\n  {\r\n    q: \"XML\",\r\n    a: \"Es una especificación de W3C como lenguaje de marcado de propósito general. Es un 'primo' del HTML.\"\r\n  },\r\n  {\r\n    q: \"XHTML\",\r\n    a: \"Es básicamente HTML especificado com XML.\"\r\n  },\r\n  {\r\n    q: \"HTML5\",\r\n    a: \"Es la estandarización más moderna que junta varias tecnologías web, que son el HTML, CSS y JS\"\r\n  },\r\n  {\r\n    q: \"JS\",\r\n    a: \"Lenguaje de programación orientado a objetos. Fue principalmente desarrollado para interactuar en el lado del cliente, pero actualmente es ampliamente utilizado en el backend, gracias a su gran flexibilidad que ofrece. Empresas que lo utilizan en el backend: Netflix, Uber, etc.\"\r\n  }, \r\n  {\r\n    q: \"PHP\",\r\n    a: \"Lenguaje de programación diseñado para manejar datos en el servidor y renderizarlos en el cliente.\"\r\n  }, \r\n  {\r\n    q: \"JSP\",\r\n    a: \"Similar a PHP, solamente que usa Java.\"\r\n  }, \r\n  {\r\n    q: \"AJAX\",\r\n    a: \"Permite las peticiones asíncronas en las páginas web con respuestas de JS o XML\"\r\n  }\r\n]\r\n","import React from 'react';\r\n\r\nexport const QuestionsElements = (props) => {\r\n  return(\r\n    <>\r\n      {\r\n        props.questions.map(q => {\r\n          return(\r\n            <li>\r\n              <p>{q.q}</p>\r\n              <p>{q.a}</p>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport './Home.module.scss';\r\nimport styles from './Home.module.scss';\r\nimport {questions} from './questions';\r\nimport { QuestionsElements } from './QuestionsElements';\r\n\r\nconst Home = (...props) => {\r\n\r\n  return(\r\n    <section>\r\n      <h2 className={styles.subTitle}>Laboratorio 1</h2>\r\n      <p className={styles.biggerFont}>Topiltzin Hernández Mares</p>\r\n      <p>Soy desarrollador Full Stack JavaScript con las tecnologías NodeJS, Express y MongoDB en el backend. En frontend desarrollo principalmente ReactJS y algunas veces PUG.</p>\r\n\r\n      <article>\r\n        <h2 className={styles.biggerFont}>Preguntas y Respuestas</h2>\r\n        <ol>\r\n          <QuestionsElements questions={questions} />\r\n        </ol>\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Home from '../../components/Home/Home';\r\nimport styles from './Routes.module.scss';\r\n\r\nconst Routes = (...props) => {\r\n  return(\r\n    <main className={styles.main}>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/daw-labs/\" component={Home} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Routes;","import React, { useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navigation from './components/Navigation/Navigation';\nimport Footer from './components/Footer/Footer';\nimport Routes from './components/Routes/Routes';\nimport './App.scss';\n\nconst App = () => {\n  const [title, setTitle] = useState('Laboratorios');\n\n  document.title = title;\n  \n  return(\n    <Router>\n      <>\n        <Navigation title={title} />\n        <Routes setTitle={setTitle} />\n        <Footer />\n      </>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitle\":\"Home_subTitle__3DQnE\",\"biggerFont\":\"Home_biggerFont__2glfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitle\":\"Navigation_subTitle__3okmM\",\"biggerFont\":\"Navigation_biggerFont__gR2qZ\",\"nav\":\"Navigation_nav__2bFLC\",\"navElement\":\"Navigation_navElement__2sbC0\",\"mainNavE\":\"Navigation_mainNavE__2gZCt\"};"],"sourceRoot":""}