{"version":3,"sources":["components/Routes/Routes.module.scss","components/Navigation/Navigation.js","components/Footer/Footer.js","components/Home/Home.js","components/Routes/Routes.js","App.js","serviceWorker.js","index.js","components/Home/Home.module.scss","components/Navigation/Navigation.module.scss"],"names":["module","exports","subTitle","biggerFont","main","Navigation","react_default","a","createElement","className","styles","nav","Link","to","navElement","mainNavE","join","Footer","Home","Routes","Route","exact","path","component","App","_useState","useState","_useState2","Object","slicedToArray","title","setTitle","document","BrowserRouter","Fragment","components_Navigation_Navigation","components_Routes_Routes","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,SAAA,yBAAAC,WAAA,2BAAAC,KAAA,yNCWHC,EARI,WACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,KACrBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,YAAYJ,UAAW,CAACC,IAAOI,WAAYJ,IAAOK,UAAUC,KAAK,MAA1E,UCISC,SARA,WACb,OACEX,EAAAC,EAAAC,cAAA,kDCSWU,EAVF,WACX,OACEZ,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOR,UAAtB,iBACAI,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOP,YAArB,gCACAG,EAAAC,EAAAC,cAAA,0MCKSW,EATA,WACb,OACEb,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAON,MACtBE,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWL,IACjCZ,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAWL,MCcjCM,SAhBH,WAAM,IAAAC,EACUC,mBAAS,gBADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAKhB,OAFAK,SAASF,MAAQA,EAGfxB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACE5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAYL,MAAOA,IACnBxB,EAAAC,EAAAC,cAAC4B,EAAD,CAAQL,SAAUA,IAClBzB,EAAAC,EAAAC,cAAC6B,EAAD,UCLYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASb,SAASc,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCElInBpD,EAAAC,QAAA,CAAkBC,SAAA,uBAAAC,WAAA,6CCAlBH,EAAAC,QAAA,CAAkBC,SAAA,6BAAAC,WAAA,+BAAAQ,IAAA,wBAAAG,WAAA,+BAAAC,SAAA","file":"static/js/main.e9733ace.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitle\":\"Routes_subTitle__1uNYv\",\"biggerFont\":\"Routes_biggerFont__njTuB\",\"main\":\"Routes_main__3-uGk\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './Navigation.module.scss';\r\n\r\nconst Navigation = (...props) => {\r\n  return(\r\n    <nav className={styles.nav}>\r\n      <Link to=\"/daw-labs\" className={[styles.navElement, styles.mainNavE].join(' ')}>Home</Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './Footer.module.scss';\r\n\r\nconst Footer = (...props) => {\r\n  return(\r\n    <footer>\r\n      footer\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Home.module.scss';\r\nimport styles from './Home.module.scss';\r\n\r\nconst Home = (...props) => {\r\n  return(\r\n    <section>\r\n      <h2 className={styles.subTitle}>Laboratorio 1</h2>\r\n      <p className={styles.biggerFont}>Topiltzin Hernández Mares</p>\r\n      <p>Soy desarrollador Full Stack JavaScript con las tecnologías NodeJS, Express y MongoDB en el backend. En frontend desarrollo principalmente ReactJS y algunas veces PUG.</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Home from '../../components/Home/Home';\r\nimport styles from './Routes.module.scss';\r\n\r\nconst Routes = (...props) => {\r\n  return(\r\n    <main className={styles.main}>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/daw-labs/\" component={Home} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Routes;","import React, { useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navigation from './components/Navigation/Navigation';\nimport Footer from './components/Footer/Footer';\nimport Routes from './components/Routes/Routes';\nimport './App.scss';\n\nconst App = () => {\n  const [title, setTitle] = useState('Laboratorios');\n\n  document.title = title;\n  \n  return(\n    <Router>\n      <>\n        <Navigation title={title} />\n        <Routes setTitle={setTitle} />\n        <Footer />\n      </>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitle\":\"Home_subTitle__3DQnE\",\"biggerFont\":\"Home_biggerFont__2glfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subTitle\":\"Navigation_subTitle__3okmM\",\"biggerFont\":\"Navigation_biggerFont__gR2qZ\",\"nav\":\"Navigation_nav__2bFLC\",\"navElement\":\"Navigation_navElement__2sbC0\",\"mainNavE\":\"Navigation_mainNavE__2gZCt\"};"],"sourceRoot":""}